class Restaurant():
	def __init__(self, restaurant_name, cuisine_type):
		self.restaurant_name = restaurant_name
		self.cuisine_type = cuisine_type
		self.number_served = 0
	
	def describe_restaurant(self):
		print('\nРесторан называется "' + self.restaurant_name.title() + '".' + '\nВ нем подается ' + self.cuisine_type + ' кухня.\nВ ресторане сейчас ' + str(self.number_served) + ' посетителей.' )
	
	def open_restaurant(self):
		print('\nЭтот ресторан открыт')
		
	def set_number_served(self, serve):
		self.number_served = serve
		
	def increment_number_served(self, serve):
		self.number_served += serve
		
		
	
restaurant = Restaurant('карфаген','европейская')
print(restaurant.restaurant_name.title() + '.')
print('\n' + restaurant.cuisine_type.title() + ' кухня.')
restaurant.describe_restaurant()
restaurant.open_restaurant()
		
restaurant1 = Restaurant('пират', 'ямайская')
restaurant1.number_served = 5
restaurant2 = Restaurant('камикадзе', 'японская')
restaurant1.describe_restaurant()
restaurant1.increment_number_served(12)
restaurant1.describe_restaurant()
restaurant2.describe_restaurant()

print()

class User():
	def __init__(self, first_name, last_name, age, country):
		self.first_name = first_name
		self.last_name = last_name
		self.age = age
		self.country = country
		self.login_attempts = 0
		
	def increment_login_attempts(self):
		self.login_attempts +=1
	def reset_login_attempts(self):
		self.login_attempts = 0
	
	def describe_user(self):
		print('\nUser info:\n\tName:' + self.first_name.title() +  '\n\tLast:' + self.last_name.title() +'\n\tAge:' + str(self.age) +  '\n\tCountry:' + self.country.title())
		print('\nКол-во входов: ' +  str(self.login_attempts))
	
	def greet_user(self):
		print('\n\t\tHello ' + self.first_name.title() + '!')
		
goga = User('goga', 'tyvaev', 31, 'dagestan')
hering = User('german', 'hering', 53, 'germany')
goga.describe_user(), goga.greet_user()
hering.describe_user(), hering.greet_user()

oleg = User('oleg', 'popov', 43, 'russia')
oleg.increment_login_attempts()
oleg.describe_user()
oleg.increment_login_attempts()
oleg.describe_user()
oleg.reset_login_attempts()
oleg.describe_user()
print('\n\n')

class IceCreamStand(Restaurant):
	def __init__(self, restaurant_name, cousine_type=0):
		super().__init__(restaurant_name, cousine_type)
		self.flavore = ['banana', 'apple', 'potato)']
		
	def cousine_type(self):
		print('Мороженое везде одинаковое')
		
	def name_flavors(self):
		print('Есть мороженое со следующими вкусами: ')
		for flavore in self.flavore:
		    print(flavore.title())
		
tytti = IceCreamStand('tytti')
tytti.name_flavors()
tytti.cousine_type()

print('\n\n')

class Admin(User):
	
	def __init__(self, first_name, last_name, age, country):
	    super().__init__(first_name, last_name, age, country)
	    self.priveleges = Priveleges()
	

print('\n\n')

class Priveleges():
	def __init__(self, priveleges=['разрешено добавлять сообщения', 'разрешено удалять пользователей', 'разрешено банить пользователей']):
	    self.priveleges = priveleges
	def show_priveleges(self):
		print('Набор привелегии админа:')
		for privelege in self.priveleges:
			print(privelege.capitalize())
			
goblin = Admin('dima', 'puchkov', 47, 'russia')
goblin.priveleges.show_priveleges()